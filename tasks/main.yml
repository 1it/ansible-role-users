---
- name: "Determine target hosts"
  set_fact:
     do_run: True
  with_subelements:
    - "{{ users_current }}"
    - target_hosts
    - skip_missing: True
  when:
    - item.1 in group_names

- name: "Manage global user's group"
  group:
    name: "{{ users_default_group }}"
    state: present
  when:
    - not users_create_group_per_user

- name: "Manage per-user groups"
  group:
    name: "{{ item.username }}"
    gid: "{{ item.uid | default(omit) }}"
    state: present
  loop: "{{ users_current }}"
  when:
    - users_current is iterable and users_create_group_per_user
    - do_run is defined or item.target_hosts is not defined

- name: "Manage groups"
  group:
    name: "{{ item }}"
    state: "{{ item.state | default('present') }}"
  loop:
    - "{{ users_group_list }}"
  when:
    - users_group_list is iterable
    
- name: "Manage user accounts"
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid | default(omit) }}"
    group: "{{ item.username if users_create_group_per_user else users_default_group }}"
    groups: "{{ item.groups|join(',') if item.groups is defined else '' }}"
    shell: "{{ item.shell if item.shell is defined else users_default_shell }}"
    createhome: "{{ 'yes' if users_create_homedir else 'no' }}"
    home: "{{ item.home if item.home is defined else '/home/%s' % item.username }}"
    system: "{{ 'yes' if item.system is defined and item.system == true else 'no' }}"
    password: "{{ item.password | default(omit) }}"
    generate_ssh_key: "{{ 'yes' if item.generate_key is defined and item.generate_key == true else 'no' }}"
    ssh_key_comment: "{{ item.username }}@{{ ansible_hostname }}"
    comment: "{{ item.name if item.name is defined else '' }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ users_current }}"
  when:
    - users_current is iterable
    - do_run is defined or item.target_hosts is not defined

- name: "Manage users SSH keys"
  authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    state: "{{ item.state | default('present') }}"
    exclusive: "{{ item.0.exclusive | default('no') }}"
  with_subelements:
    - "{{ users_current }}"
    - authorized
  when:
    - users_current is iterable
    - do_run is defined or item.target_hosts is not defined

- name: "Manage user's SSH keys only"
  authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    state: 'present'
    exclusive: "{{ item.0.exclusive | default('no') }}"
  with_subelements:
    - "{{ users_keys }}"
    - authorized
  when:
    - users_keys is iterable
    - do_run is defined or item.target_hosts is not defined

- name: "Secure the users SSH directory"
  file:
    dest: "{{ item.home if item.home is defined else '/home/%s' % item.username }}/.ssh"
    state: directory
    mode: 0700
  loop: "{{ users_current }}"
  when:
    - users_current is iterable
    - do_run is defined or item.target_hosts is not defined
